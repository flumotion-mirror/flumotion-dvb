<registry>
  <components>
    <component type="dvb-producer"
               base="flumotion/component/producers/dvb"
               _description="Produces decoded audio/video from a DVB adapter">
      <source location="flumotion.component.producers.dvb.dvb" />
      <feeder name="audio" />
      <feeder name="video" />
      <feeder name="mpegts" />
      <entries>
        <entry type="component" location="dvb.py"
               function="DVB" />
	<entry type="admin/gtk" location="admin_gtk.py"
               function="DVBAdminGtk" />
        <entry type="wizard" location="wizard_gtk.py"
               function="DVBWizardPlugin" />

      </entries>
      <wizard type="video-producer" _description="DVB Video"
              feeder="video" />
      <wizard type="audio-producer" _description="DVB Audio"
              feeder="audio" />

      <properties>
        <!-- S, T or FILE -->
        <property name="dvb-type" type="string" required="true" 
                  _description="One of: T (for DVB-T), S (for DVB-S) or FILE." />
	<property name="frequency" type="int" required="false"
                  _description="Frequency" />
	<property name="program-number" type="int" required="true"
                  _description="Program number to demux for" />
	<property name="has-video" type="bool" required="false"
                  _description="Wether we want to capture video from the source" />
	<property name="video-parser" type="string" required="false"
                  _description="Video parser the component should use" />
	<property name="video-decoder" type="string" required="false"
                  _description="Video decoder the component should use" />
	<property name="audio-decoder" type="string" required="false"
                  _description="Audio decoder the component should use" />
	<!-- audio pid: optional argument used to identify the audio
	     pid that we want to use, in the case there may be many -->
	<property name="audio-pid" type="int" required="false"
                  _description="Colon seperated list of audio pids" />
	<!-- S, T -->
	<property name="device" type="string" required="false"
		  _description="Device prefix (deprecated)" />
	<property name="adapter" type="int" required="false"
	          _description="Adapter number (eg 0 for adapter 0)" />
	<property name="frontend" type="int" required="false"
	          _description="Frontend number (eg 0 for frontend 0)" />
	<property name="code-rate-hp" type="string"
                  _description="High Priority Code Rate (DVB-T, DVB-S and DVB-C)" />
	<!-- DVB-T specific properties -->
	<property name="modulation" type="int"
                  _description="Modulation (DVB-T and DVB-C)" />
	<property name="trans-mode" type="string"
                  _description="Transmission Mode (DVB-T)" />
        <property name="bandwidth" type="int"
                  _description="Bandwidth (DVB-T)" />
        <property name="code-rate-lp" type="string"
                  _description="High Priority Code Rate (DVB-T, DVB-S and DVB-C)" />
	<property name="guard" type="int"
                  _description="Guard Interval (DVB-T)" />
	<property name="hierarchy" type="int"
                  _description="Hierarchy Information (DVB-T)" />
	<!-- DVB-S specific properties -->
	<property name="polarity" type="string"
                  _description="Polarity [vhHV] (DVB-S)" />
	<property name="symbol-rate" type="string"
                  _description="Symbol Rate (DVB-S, DVB-C)" />
	<property name="satellite-number" type="int"
                  _description="DISEqC selected satellite (DVB-S)" />
	<!-- File specific properties -->
	<property name="filename" type="string"
                  _description="The location of the TS file." />
	<!-- output properties -->
	<property name="width" type="int"
                  _description="The width to capture the video at." />
	<property name="height" type="int"
                  _description="The height to capture the video at." />
	<property name="scaled-width" type="int"
                  _description="The width to scale the video to." />
	<property name="framerate" type="fraction"
                  _description="Output framerate" />
        <property name="pixel-aspect-ratio" type="fraction"
                  _description="The pixel-aspect-ratio (Deprecated)" />
        <property name="is-square" type="bool"
                  _description="Whether to scale to a 1:1 pixel aspect ratio." />
	<property name="deinterlace-mode" type="string"
                  _description="Deinterlace mode.(Default=auto)" />
	<property name="deinterlace-method" type="string"
                  _description="Deinterlace method.(Default=ffmpeg)" />
	<property name="deinterlacer" type="string"
                  _description="Deprecated" />
	<!-- ignored, but kept for backward compatibility -->
	<property name="pids" type="string"
                  _description="Ignored, kept for backward compatibility" />
      </properties>
    </component>

    <component type="dvb-ts-producer"
               base="flumotion/component/producers/dvb"
               _description="Produces a transport stream from a DVB adapter">
      <source location="flumotion.component.producers.dvb.dvb" />
      <feeder name="default" />
      <entries>
        <entry type="component" location="dvb.py"
               function="DVBTSProducer" />
      </entries>

      <properties>
        <!-- S, T or FILE -->
        <property name="dvb-type" type="string" required="true"
                  _description="One of: T (for DVB-T), S (for DVB-S) or FILE." />
	<property name="frequency" type="int" required="false"
                  _description="Frequency" />
	<property name="program-numbers" type="string" required="true"
                  _description="Program numbers to demux for" />
	<!-- S, T -->
	<property name="device" type="string" required="false"
		  _description="Device prefix (deprecated)" />
	<property name="adapter" type="int" required="false"
	          _description="Adapter number (eg 0 for adapter 0)" />
	<property name="frontend" type="int" required="false"
	          _description="Frontend number (eg 0 for frontend 0)" />
	<property name="code-rate-hp" type="string"
                  _description="High Priority Code Rate (DVB-T, DVB-S and DVB-C)" />
	<!-- DVB-T specific properties -->
	<property name="modulation" type="int"
                  _description="Modulation (DVB-T and DVB-C)" />
	<property name="trans-mode" type="int"
                  _description="Transmission Mode (DVB-T)" />
        <property name="bandwidth" type="int"
                  _description="Bandwidth (DVB-T)" />
        <property name="code-rate-lp" type="string"
                  _description="High Priority Code Rate (DVB-T, DVB-S and DVB-C)" />
	<property name="guard" type="int"
                  _description="Guard Interval (DVB-T)" />
	<property name="hierarchy" type="int"
                  _description="Hierarchy Information (DVB-T)" />
	<!-- DVB-S specific properties -->
	<property name="polarity" type="string"
                  _description="Polarity [vhHV] (DVB-S)" />
	<property name="symbol-rate" type="string"
                  _description="Symbol Rate (DVB-S, DVB-C)" />
	<property name="satellite-number" type="int"
                  _description="DISEqC selected satellite (DVB-S)" />
	<!-- File specific properties -->
	<property name="filename" type="string"
                  _description="The location of the TS file." />
	<!-- output properties -->
      </properties>
    </component>

    <component type="mpeg-ts-splitter"
               base="flumotion/component/producers/dvb"
               _description="Eats from a transport stream selecting just the needed program numbers" >
      <source location="flumotion.component.producers.dvb.dvb" />
      <eater name="default" />
      <feeder name="default" />
      <entries>
        <entry type="component" location="dvb.py"
               function="MpegTSSplitter" />
      </entries>
      <properties>
        <property name="program-number" type="int"
                  _description="Program number to demux for" />
      </properties>
    </component>

    <component type="mpeg-ts-decoder"
               base="flumotion/component/producers/dvb"
               _description="Decodes the audio/video from a transport stream" >
      <source location="flumotion.component.producers.dvb.dvb" />
      <eater name="default" />
      <feeder name="audio" />
      <feeder name="video" />
      <entries>
        <entry type="component" location="dvb.py"
               function="MpegTSDecoder" />
	<entry type="admin/gtk" location="admin_gtk.py"
               function="MpegTSDecoderAdminGtk" />

      </entries>

      <properties>
        <property name="program-number" type="int" required="true"
                  _description="Program number to demux for" />
	<!-- audio pid: optional argument used to identify the audio
	     pid that we want to use, in the case there may be many -->
	<property name="audio-pid" type="int" required="false"
                  _description="The  audio pid that we want to use, in the case there may be many" />
	<!-- output properties -->
	<property name="width" type="int"
                  _description="The width to capture the video at." />
	<property name="height" type="int"
                  _description="The height to capture the video at." />
	<property name="scaled-width" type="int"
                  _description="The width to scale the video to." />
	<property name="framerate" type="fraction"
                  _description="Output framerate" />
        <property name="pixel-aspect-ratio" type="fraction"
                  _description="The pixel-aspect-ratio (Deprecated)" />
        <property name="is-square" type="bool"
                  _description="Whether to scale to a 1:1 pixel aspect ratio." />
	<property name="deinterlace-mode" type="string"
                  _description="Deinterlace mode.(Default=auto)" />
	<property name="deinterlace-method" type="string"
                  _description="Deinterlace method.(Default=ffmpeg)" />
	<property name="deinterlacer" type="string"
                  _description="Deprecated" />
	<property name="has-video" type="bool" required="false"
                  _description="Wether we want to capture video from the source" />
	<property name="video-parser" type="string" required="false"
                  _description="Video parser the component should use" />
	<property name="video-decoder" type="string" required="false"
                  _description="Video decoder the component should use" />
	<property name="audio-decoder" type="string" required="false"
                  _description="Audio decoder the component should use" />
      </properties>
    </component>

  </components>
  <bundles>
    <bundle project="dvb" name="dvb-base">
       <dependencies>
           <dependency name="component-base" />
       </dependencies>

       <directories>
           <directory name="flumotion/component/producers/dvb">
               <filename location="__init__.py" />
           </directory>
       </directories>
    </bundle>

    <bundle project="dvb" name="dvb-component">
       <dependencies>
           <dependency name="component" />
           <dependency name="dvb-base" />
           <dependency name="volume-effect" />
           <dependency name="deinterlace-effect" />
           <dependency name="videoscale-effect" />
           <dependency name="videorate-effect" />
       </dependencies>

       <directories>
           <directory name="flumotion/component/producers/dvb">
               <filename location="dvb.py" />
           </directory>
       </directories>
    </bundle>
    <bundle project="dvb" name="dvb-admin-gtk">
       <dependencies>
           <dependency name="dvb-base" />
	   <dependency name="base-admin-gtk" />
	   <dependency name="volume-admin-gtk" />
           <dependency name="deinterlace-admin-gtk" />
           <dependency name="videoscale-admin-gtk" />
       </dependencies>

       <directories>
           <directory name="flumotion/component/producers/dvb">
	       <filename location="admin_gtk.py" />
	       <filename location="dvb.glade" />
	   </directory>
       </directories>
    </bundle>
    <bundle project="dvb" name="dvb-wizard">
        <dependencies>
            <dependency name="dvb-base" />
            <dependency name="component" />
        </dependencies>

        <directories>
            <directory name="flumotion/component/producers/dvb">
                <filename location="wizard.glade" />
                <filename location="wizard_gtk.py" />
            </directory>
        </directories>
    </bundle>

  </bundles>
</registry> 
